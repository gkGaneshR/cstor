language: c
sudo: required
env:
  global:
    # Travis limits maximum log size, we have to cut tests output 
   # - CODECOV_TOKEN="987cf0f1-ae3b-477e-b645-954e682f99ec"
   # - ZFS_TEST_TRAVIS_LOG_MAX_LENGTH=800

#matrix:
    
before_install:
#sudo apt-get -qq update
    - sudo apt-get install --yes -qq build-essential autoconf libtool gawk alien fakeroot linux-headers-$(uname -r) libaio-dev
    - sudo apt-get install --yes -qq zlib1g-dev uuid-dev libattr1-dev libblkid-dev libselinux-dev libudev-dev libssl-dev
    - sudo apt-get install --yes -qq lcov libjemalloc-dev
#packages for tests
    - sudo apt-get install --yes -qq parted lsscsi ksh attr acl nfs-kernel-server fio
    - sudo apt-get install --yes -qq libgtest-dev cmake


install:
#    - pushd .
#    - cd /usr/src/gtest
#    - sudo cmake CMakeLists.txt
#    - sudo make
#    - sudo cp *.a /usr/lib
#    - popd

    git clone https://github.com/openebs/zfs
git clone https://github.com/openebs/spl

echo "Clone Completed"

cd spl
git checkout spl-0.7.4
sh autogen.sh
./configure
make

cd ../zfs
#git checkout zfs-0.7.4
sh autogen.sh
./configure --enable-uzfs=yes --with-config=user --with-jemalloc
make

if [ $? -eq "0" ]; then
 echo "No error"
else
 echo "Error"
fi


#Check for build success or failure
if [ -e cmd/zrepl/.libs/zrepl -a -e cmd/zpool/.libs/zpool -a -e cmd/zfs/.libs/zfs ]; then
  echo "Build finished; Binaries are available"
else
 echo "Build failure; Binaries are unavailable"
 #exit 1
fi

sudo docker build -f Dockerfile.Baseimage -t openebs/cstor-base:ci --build-arg BUILD_DATE=${BUILD_DATE} . 

#before_script:
#    - make cstyle;

script:
    - echo "At script"

after_failure:
    - find /var/tmp/test_results/current/log -type f -name '*' -printf "%f\n" -exec cut -c -$ZFS_TEST_TRAVIS_LOG_MAX_LENGTH {} \;
after_success:
    - find /var/tmp/test_results/current/log -type f -name '*' -printf "%f\n" -exec cut -c -$ZFS_TEST_TRAVIS_LOG_MAX_LENGTH {} \;
    - bash <(curl -s https://codecov.io/bash)
